# OpenTelemetry Collector 增强安全配置
# 包含零信任安全模型、数据脱敏、访问控制等企业级安全功能

receivers:
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
        max_recv_msg_size: 4194304
        max_concurrent_streams: 16
        # TLS配置
        tls:
          cert_file: "/etc/ssl/certs/collector.crt"
          key_file: "/etc/ssl/private/collector.key"
          client_ca_file: "/etc/ssl/certs/ca.crt"
          min_version: "1.2"
          max_version: "1.3"
          cipher_suites:
            - "TLS_AES_256_GCM_SHA384"
            - "TLS_CHACHA20_POLY1305_SHA256"
            - "TLS_AES_128_GCM_SHA256"
        # 认证配置
        auth:
          authenticator: "basicauth/client"
        # 速率限制
        rate_limiting:
          enabled: true
          requests_per_second: 1000
          burst_size: 2000
      
      http:
        endpoint: 0.0.0.0:4318
        max_recv_msg_size: 4194304
        # TLS配置
        tls:
          cert_file: "/etc/ssl/certs/collector.crt"
          key_file: "/etc/ssl/private/collector.key"
          client_ca_file: "/etc/ssl/certs/ca.crt"
          min_version: "1.2"
          max_version: "1.3"
        # 认证配置
        auth:
          authenticator: "basicauth/client"
        # 速率限制
        rate_limiting:
          enabled: true
          requests_per_second: 500
          burst_size: 1000
        # CORS配置
        cors:
          allowed_origins:
            - "https://app.example.com"
            - "https://admin.example.com"
          allowed_headers:
            - "Content-Type"
            - "Authorization"
            - "X-Requested-With"
          allowed_methods:
            - "GET"
            - "POST"
            - "OPTIONS"

processors:
  # 批处理器
  batch:
    timeout: 1s
    send_batch_size: 512
    send_batch_max_size: 2048

  # 内存限制器
  memory_limiter:
    check_interval: 2s
    limit_mib: 1024
    spike_limit_mib: 256

  # 数据脱敏处理器
  attributes:
    actions:
      # 移除敏感属性
      - key: "user.password"
        action: delete
      - key: "user.token"
        action: delete
      - key: "user.credit_card"
        action: delete
      - key: "user.ssn"
        action: delete
      - key: "user.email"
        action: hash
      - key: "user.phone"
        action: hash
      # 标准化属性
      - key: "security.level"
        action: insert
        value: "confidential"
      - key: "data.classification"
        action: insert
        value: "internal"

  # 敏感数据过滤器
  filter:
    traces:
      span:
        - 'attributes["user.password"] == nil'
        - 'attributes["user.token"] == nil'
        - 'attributes["user.credit_card"] == nil'
    logs:
      log_record:
        - 'body != nil and not(body matches "password.*=.*")'
        - 'body != nil and not(body matches "token.*=.*")'

  # 访问控制处理器
  accesscontrol:
    # 基于角色的访问控制
    rbac:
      enabled: true
      rules:
        - principal: "service:frontend"
          permissions: ["traces:read", "metrics:read"]
          resources: ["traces:frontend:*", "metrics:frontend:*"]
        - principal: "service:backend"
          permissions: ["traces:read", "traces:write", "metrics:read", "metrics:write"]
          resources: ["traces:backend:*", "metrics:backend:*"]
        - principal: "user:admin"
          permissions: ["*:*"]
          resources: ["*:*"]
        - principal: "user:developer"
          permissions: ["traces:read", "metrics:read", "logs:read"]
          resources: ["traces:dev:*", "metrics:dev:*", "logs:dev:*"]
    
    # 基于属性的访问控制
    abac:
      enabled: true
      policies:
        - name: "high-security-data"
          conditions:
            - attribute: "security.level"
              operator: "equals"
              value: "confidential"
          actions: ["deny"]
          principals: ["user:guest"]
        - name: "production-data"
          conditions:
            - attribute: "environment"
              operator: "equals"
              value: "production"
          actions: ["allow"]
          principals: ["user:admin", "user:sre"]

  # 数据加密处理器
  encryption:
    enabled: true
    algorithm: "AES-256-GCM"
    key_rotation_interval: "24h"
    fields:
      - "user.email"
      - "user.phone"
      - "user.address"
    # 密钥管理
    key_management:
      provider: "vault"
      vault_url: "https://vault.example.com"
      secret_path: "secret/opentelemetry/encryption"
      auth_method: "token"

  # 审计日志处理器
  audit:
    enabled: true
    events:
      - "data_access"
      - "data_modification"
      - "authentication"
      - "authorization"
      - "configuration_change"
    storage:
      type: "elasticsearch"
      endpoint: "https://audit-logs.example.com:9200"
      index: "opentelemetry-audit"
      auth:
        authenticator: "basicauth/client"

  # 合规性检查处理器
  compliance:
    enabled: true
    standards:
      - "GDPR"
      - "PCI-DSS"
      - "HIPAA"
      - "SOX"
    rules:
      - name: "gdpr-data-retention"
        standard: "GDPR"
        condition: 'attributes["data.subject"] != nil'
        action: "retain_for_30_days"
      - name: "pci-sensitive-data"
        standard: "PCI-DSS"
        condition: 'attributes["payment.card_number"] != nil'
        action: "encrypt_and_audit"

exporters:
  # 安全OTLP导出器
  otlp/secure:
    endpoint: "https://secure-backend.example.com:4317"
    tls:
      cert_file: "/etc/ssl/certs/client.crt"
      key_file: "/etc/ssl/private/client.key"
      ca_file: "/etc/ssl/certs/ca.crt"
      min_version: "1.3"
    auth:
      authenticator: "basicauth/client"
    compression: gzip
    timeout: 30s
    retry_on_failure:
      enabled: true
      initial_interval: 5s
      max_interval: 30s
      max_elapsed_time: 300s

  # 审计日志导出器
  elasticsearch/audit:
    endpoints:
      - "https://audit-logs.example.com:9200"
    index: "opentelemetry-audit"
    auth:
      authenticator: "basicauth/client"
    tls:
      cert_file: "/etc/ssl/certs/client.crt"
      key_file: "/etc/ssl/private/client.key"
      ca_file: "/etc/ssl/certs/ca.crt"

  # 安全监控导出器
  prometheus/security:
    endpoint: "0.0.0.0:8889"
    namespace: "otelcol_security"
    const_labels:
      service: "opentelemetry-collector"
      security_level: "high"
    # 安全指标
    security_metrics:
      enabled: true
      metrics:
        - name: "security_access_denied_total"
          help: "Total number of access denied events"
          type: "counter"
        - name: "security_authentication_failures_total"
          help: "Total number of authentication failures"
          type: "counter"
        - name: "security_data_encryption_operations_total"
          help: "Total number of data encryption operations"
          type: "counter"

  # 日志导出器
  logging/security:
    loglevel: info
    # 安全日志配置
    security_logging:
      enabled: true
      events:
        - "authentication"
        - "authorization"
        - "data_access"
        - "data_modification"
        - "security_violation"
      format: "json"
      include_sensitive_data: false

service:
  pipelines:
    # 安全Traces管道
    traces:
      receivers: [otlp]
      processors: [memory_limiter, accesscontrol, filter, attributes, encryption, audit, compliance, batch]
      exporters: [otlp/secure, logging/security]

    # 安全Metrics管道
    metrics:
      receivers: [otlp]
      processors: [memory_limiter, accesscontrol, attributes, audit, batch]
      exporters: [otlp/secure, prometheus/security, logging/security]

    # 安全Logs管道
    logs:
      receivers: [otlp]
      processors: [memory_limiter, accesscontrol, filter, attributes, encryption, audit, compliance, batch]
      exporters: [otlp/secure, elasticsearch/audit, logging/security]

  # 扩展配置
  extensions: [health_check, pprof, zpages, basicauth, oauth2client, file_storage, sigv4auth]

  # 健康检查
  health_check:
    endpoint: 0.0.0.0:13133
    # 安全健康检查
    security_checks:
      enabled: true
      checks:
        - name: "certificate_validity"
          description: "Check SSL certificate validity"
        - name: "authentication_service"
          description: "Check authentication service availability"
        - name: "encryption_keys"
          description: "Check encryption key availability"

  # 性能分析
  pprof:
    endpoint: 0.0.0.0:1777
    # 安全性能分析
    security_profiling:
      enabled: true
      require_authentication: true
      allowed_principals: ["user:admin", "user:sre"]

  # 调试页面
  zpages:
    endpoint: 0.0.0.0:55679
    # 安全调试页面
    security_debug:
      enabled: true
      require_authentication: true
      show_sensitive_info: false

  # 基础认证
  basicauth:
    client:
      username: "collector"
      password: "secure_password_here"
    # 密码策略
    password_policy:
      min_length: 12
      require_uppercase: true
      require_lowercase: true
      require_numbers: true
      require_special_chars: true
      max_age_days: 90

  # OAuth2客户端认证
  oauth2client:
    client_id: "opentelemetry-collector"
    client_secret: "client_secret_here"
    token_url: "https://auth.example.com/oauth/token"
    scopes:
      - "opentelemetry:read"
      - "opentelemetry:write"
    # 令牌刷新
    token_refresh:
      enabled: true
      refresh_interval: "1h"
      refresh_threshold: "5m"

  # 文件存储
  file_storage:
    directory: "/var/lib/opentelemetry-collector"
    # 加密存储
    encryption:
      enabled: true
      algorithm: "AES-256-GCM"
      key_file: "/etc/ssl/private/storage.key"

  # AWS SigV4认证
  sigv4auth:
    region: "us-west-2"
    service: "opentelemetry"
    # IAM角色
    assume_role:
      enabled: true
      role_arn: "arn:aws:iam::123456789012:role/OpenTelemetryCollectorRole"
      session_name: "opentelemetry-collector"

# 安全配置
security:
  # 零信任安全模型
  zero_trust:
    enabled: true
    # 网络分段
    network_segmentation:
      enabled: true
      segments:
        - name: "frontend"
          cidr: "10.0.1.0/24"
          allowed_services: ["collector:4317", "collector:4318"]
        - name: "backend"
          cidr: "10.0.2.0/24"
          allowed_services: ["collector:4317", "collector:4318", "backend:8080"]
        - name: "admin"
          cidr: "10.0.3.0/24"
          allowed_services: ["collector:13133", "collector:1777", "collector:55679"]
    
    # 设备信任
    device_trust:
      enabled: true
      certificate_validation: true
      device_fingerprinting: true
    
    # 用户信任
    user_trust:
      enabled: true
      multi_factor_authentication: true
      risk_based_authentication: true

  # 数据保护
  data_protection:
    # 数据分类
    classification:
      enabled: true
      levels:
        - name: "public"
          encryption_required: false
          retention_days: 30
        - name: "internal"
          encryption_required: true
          retention_days: 90
        - name: "confidential"
          encryption_required: true
          retention_days: 365
        - name: "restricted"
          encryption_required: true
          retention_days: 2555  # 7 years
    
    # 数据脱敏
    masking:
      enabled: true
      rules:
        - field: "user.email"
          method: "hash"
          algorithm: "sha256"
        - field: "user.phone"
          method: "mask"
          pattern: "***-***-####"
        - field: "user.ssn"
          method: "redact"
          replacement: "[REDACTED]"
    
    # 数据加密
    encryption:
      at_rest:
        enabled: true
        algorithm: "AES-256-GCM"
        key_rotation: "30d"
      in_transit:
        enabled: true
        min_tls_version: "1.2"
        cipher_suites:
          - "TLS_AES_256_GCM_SHA384"
          - "TLS_CHACHA20_POLY1305_SHA256"

  # 访问控制
  access_control:
    # 基于角色的访问控制 (RBAC)
    rbac:
      enabled: true
      roles:
        - name: "admin"
          permissions: ["*:*"]
        - name: "sre"
          permissions: ["traces:*", "metrics:*", "logs:read"]
        - name: "developer"
          permissions: ["traces:read", "metrics:read", "logs:read"]
        - name: "viewer"
          permissions: ["traces:read", "metrics:read"]
    
    # 基于属性的访问控制 (ABAC)
    abac:
      enabled: true
      policies:
        - name: "production-access"
          conditions:
            - attribute: "environment"
              operator: "equals"
              value: "production"
          permissions: ["traces:read", "metrics:read"]
          principals: ["user:sre", "user:admin"]
    
    # 时间基础访问控制
    time_based_access:
      enabled: true
      business_hours: "09:00-17:00"
      timezone: "UTC"
      weekend_access: false

  # 审计和合规
  audit_compliance:
    # 审计日志
    audit_logging:
      enabled: true
      events:
        - "authentication"
        - "authorization"
        - "data_access"
        - "data_modification"
        - "configuration_change"
        - "security_violation"
      storage:
        type: "elasticsearch"
        index: "opentelemetry-audit"
        retention: "7y"
    
    # 合规性检查
    compliance:
      enabled: true
      standards:
        - name: "GDPR"
          rules:
            - name: "data-subject-rights"
              description: "Ensure data subject rights are respected"
              check_interval: "24h"
            - name: "data-retention"
              description: "Ensure data retention policies are followed"
              check_interval: "24h"
        - name: "PCI-DSS"
          rules:
            - name: "card-data-protection"
              description: "Ensure card data is properly protected"
              check_interval: "1h"
            - name: "access-control"
              description: "Ensure proper access controls are in place"
              check_interval: "1h"
    
    # 数据治理
    data_governance:
      enabled: true
      policies:
        - name: "data-lineage"
          description: "Track data lineage and transformations"
        - name: "data-quality"
          description: "Ensure data quality standards"
        - name: "data-lifecycle"
          description: "Manage data lifecycle and retention"

  # 威胁检测
  threat_detection:
    enabled: true
    # 异常检测
    anomaly_detection:
      enabled: true
      algorithms:
        - "statistical"
        - "machine_learning"
      thresholds:
        cpu_usage: 80
        memory_usage: 80
        network_traffic: 1000
        error_rate: 5
    
    # 入侵检测
    intrusion_detection:
      enabled: true
      rules:
        - name: "brute-force-attack"
          pattern: "multiple_failed_logins"
          threshold: 5
          time_window: "5m"
        - name: "privilege-escalation"
          pattern: "unusual_permission_requests"
          threshold: 3
          time_window: "1h"
    
    # 安全事件响应
    incident_response:
      enabled: true
      playbooks:
        - name: "data-breach"
          triggers: ["sensitive_data_exposure"]
          actions: ["isolate_system", "notify_security_team", "audit_logs"]
        - name: "unauthorized-access"
          triggers: ["failed_authentication", "privilege_escalation"]
          actions: ["block_user", "notify_admin", "audit_logs"]

  # 密钥管理
  key_management:
    # 密钥存储
    storage:
      provider: "vault"
      vault_url: "https://vault.example.com"
      secret_path: "secret/opentelemetry"
      auth_method: "token"
    
    # 密钥轮换
    rotation:
      enabled: true
      interval: "30d"
      automatic: true
    
    # 密钥备份
    backup:
      enabled: true
      location: "s3://secure-backup-bucket/keys"
      encryption: true
      retention: "1y"
