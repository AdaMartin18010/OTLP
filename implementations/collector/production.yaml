# OpenTelemetry Collector 生产环境配置
# 适用于高负载、高可用性的生产环境

receivers:
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
        max_recv_msg_size: 4194304  # 4MB
        max_concurrent_streams: 1000
        read_buffer_size: 524288    # 512KB
        write_buffer_size: 524288   # 512KB
        keepalive:
          server_parameters:
            time: 30s
            timeout: 5s
            permit_without_stream: true
          enforcement_policy:
            min_time: 5s
            permit_without_stream: true
      http:
        endpoint: 0.0.0.0:4318
        max_request_body_size: 4194304  # 4MB
        cors:
          allowed_origins:
            - "https://your-domain.com"
            - "https://*.your-domain.com"
          allowed_headers:
            - "Content-Type"
            - "Authorization"
            - "X-Requested-With"
          max_age: 7200

  # 健康检查
  health_check:
    endpoint: 0.0.0.0:13133

  # 指标暴露
  prometheus:
    endpoint: 0.0.0.0:8888
    const_labels:
      environment: "production"
      service: "otel-collector"

processors:
  # 批处理优化
  batch:
    timeout: 1s
    send_batch_size: 1024
    send_batch_max_size: 2048

  # 内存限制
  memory_limiter:
    limit_mib: 1024
    spike_limit_mib: 128
    check_interval: 5s

  # 资源检测
  resourcedetection:
    detectors: [env, system, gcp, aws, azure]
    timeout: 2s
    override: false

  # 属性处理
  attributes:
    actions:
      - key: environment
        value: production
        action: insert
      - key: service.version
        from_attribute: version
        action: insert
      - key: deployment.environment
        value: production
        action: insert

  # 采样
  probabilistic_sampler:
    sampling_percentage: 10.0

  # 过滤
  filter:
    traces:
      span:
        - 'attributes["http.status_code"] == 500'
        - 'attributes["error"] == true'
    metrics:
      metric:
        - 'name == "http_request_duration"'
    logs:
      log_record:
        - 'severity_number >= SEVERITY_NUMBER_WARN'

  # 重试
  retry:
    enabled: true
    initial_interval: 1s
    max_interval: 30s
    max_elapsed_time: 300s

exporters:
  # Jaeger 导出
  jaeger:
    endpoint: jaeger:14250
    tls:
      insecure: false
      cert_file: /etc/ssl/certs/jaeger.crt
      key_file: /etc/ssl/private/jaeger.key
    retry_on_failure:
      enabled: true
      initial_interval: 1s
      max_interval: 30s
      max_elapsed_time: 300s
    sending_queue:
      enabled: true
      num_consumers: 10
      queue_size: 1000
      storage: file_storage

  # Prometheus 导出
  prometheus:
    endpoint: "0.0.0.0:8889"
    const_labels:
      environment: "production"
    namespace: "otel"
    send_timestamps: true
    metric_relabeling:
      - source_labels: [__name__]
        regex: 'http_request_duration.*'
        target_label: 'metric_type'
        replacement: 'histogram'
    retry_on_failure:
      enabled: true
      initial_interval: 1s
      max_interval: 30s
      max_elapsed_time: 300s

  # OTLP 导出 (用于其他后端)
  otlp:
    endpoint: https://your-backend.com:4317
    tls:
      insecure: false
      cert_file: /etc/ssl/certs/backend.crt
      key_file: /etc/ssl/private/backend.key
    headers:
      authorization: "Bearer ${BACKEND_TOKEN}"
    retry_on_failure:
      enabled: true
      initial_interval: 1s
      max_interval: 30s
      max_elapsed_time: 300s
    sending_queue:
      enabled: true
      num_consumers: 10
      queue_size: 1000

  # 日志导出
  logging:
    loglevel: info
    sampling_initial: 2
    sampling_thereafter: 500

  # 文件导出 (备份)
  file:
    path: /var/log/otel/backup.jsonl
    rotation:
      max_megabytes: 100
      max_days: 7
      max_backups: 5

extensions:
  # 健康检查
  health_check:
    endpoint: 0.0.0.0:13133

  # 性能分析
  pprof:
    endpoint: 0.0.0.0:1777

  # 内存分析
  memory_ballast:
    size_in_percentage: 20

  # 文件存储
  file_storage:
    directory: /var/lib/otel/storage
    timeout: 1s

  # 负载均衡
  loadbalancing:
    resolver:
      static:
        hostnames:
          - backend1.your-domain.com
          - backend2.your-domain.com
    routing_key: service

service:
  extensions: [health_check, pprof, memory_ballast, file_storage, loadbalancing]
  
  pipelines:
    traces:
      receivers: [otlp]
      processors: [memory_limiter, resourcedetection, attributes, probabilistic_sampler, filter, batch, retry]
      exporters: [jaeger, otlp, logging, file]
    
    metrics:
      receivers: [otlp, prometheus]
      processors: [memory_limiter, resourcedetection, attributes, filter, batch, retry]
      exporters: [prometheus, otlp, logging, file]
    
    logs:
      receivers: [otlp]
      processors: [memory_limiter, resourcedetection, attributes, filter, batch, retry]
      exporters: [otlp, logging, file]

  telemetry:
    logs:
      level: info
      development: false
      disable_caller: false
      disable_stacktrace: false
      sampling:
        initial: 2
        thereafter: 500
    metrics:
      level: detailed
      address: 0.0.0.0:8888
