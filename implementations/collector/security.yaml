receivers:
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
        tls:
          cert_file: /etc/otel-collector/certs/server.crt
          key_file: /etc/otel-collector/certs/server.key
          client_ca_file: /etc/otel-collector/certs/ca.crt
        auth:
          authenticator: oauth2client
      http:
        endpoint: 0.0.0.0:4318
        tls:
          cert_file: /etc/otel-collector/certs/server.crt
          key_file: /etc/otel-collector/certs/server.key
          client_ca_file: /etc/otel-collector/certs/ca.crt
        auth:
          authenticator: oauth2client

processors:
  # 敏感数据过滤
  attributes:
    actions:
      - key: "password"
        action: "delete"
      - key: "token"
        action: "delete"
      - key: "secret"
        action: "delete"
      - key: "key"
        action: "delete"
      - key: "auth"
        action: "delete"
      - key: "credit_card"
        action: "delete"
      - key: "ssn"
        action: "delete"
      - key: "email"
        action: "hash"
      - key: "phone"
        action: "hash"
      - key: "user_id"
        action: "hash"

  # 数据脱敏
  transform:
    trace_statements:
      - context: span
        statements:
          - merge_maps(attributes, {"sensitive": false}, "upsert")
    metric_statements:
      - context: metric
        statements:
          - merge_maps(attributes, {"sensitive": false}, "upsert")
    log_statements:
      - context: log
        statements:
          - merge_maps(attributes, {"sensitive": false}, "upsert")

  # 访问控制
  filter:
    traces:
      span:
        - 'attributes["user.role"] == "admin" or attributes["user.role"] == "user"'
    metrics:
      metric:
        - 'attributes["service.name"] != "internal"'
    logs:
      log_record:
        - 'attributes["level"] != "DEBUG"'

  # 数据加密
  encryption:
    algorithm: "AES-256-GCM"
    key: "${ENCRYPTION_KEY}"

  # 审计日志
  audit:
    enabled: true
    log_file: "/var/log/otel-collector/audit.log"
    events:
      - "data_received"
      - "data_processed"
      - "data_exported"
      - "error_occurred"

exporters:
  # 安全日志导出
  logging:
    loglevel: info
    sampling_initial: 5
    sampling_thereafter: 200
    verbosity: detailed
    output: "file"
    output_file: "/var/log/otel-collector/secure.log"

  # 加密导出
  otlp:
    endpoint: "https://secure-backend.example.com:443"
    headers:
      "Authorization": "Bearer ${API_TOKEN}"
      "X-API-Key": "${API_KEY}"
    tls:
      insecure: false
      cert_file: /etc/otel-collector/certs/client.crt
      key_file: /etc/otel-collector/certs/client.key
      ca_file: /etc/otel-collector/certs/ca.crt
    compression: "gzip"
    sending_queue:
      enabled: true
      num_consumers: 10
      queue_size: 1000
    retry_on_failure:
      enabled: true
      initial_interval: 5s
      max_interval: 30s
      max_elapsed_time: 300s

  # 安全存储
  secure_storage:
    type: "encrypted_file"
    path: "/secure/otel-data"
    encryption_key: "${STORAGE_ENCRYPTION_KEY}"
    compression: "gzip"

extensions:
  # OAuth2认证
  oauth2client:
    client_id: "${OAUTH2_CLIENT_ID}"
    client_secret: "${OAUTH2_CLIENT_SECRET}"
    token_url: "https://auth.example.com/oauth/token"
    scopes: ["otel-collector"]
    timeout: 5s

  # JWT认证
  jwt:
    issuer: "https://auth.example.com"
    audience: "otel-collector"
    public_key: "/etc/otel-collector/certs/jwt-public.key"
    algorithm: "RS256"

  # 访问控制
  access_control:
    rules:
      - path: "/v1/traces"
        methods: ["POST"]
        roles: ["admin", "user"]
      - path: "/v1/metrics"
        methods: ["POST"]
        roles: ["admin", "user"]
      - path: "/v1/logs"
        methods: ["POST"]
        roles: ["admin", "user"]
      - path: "/health"
        methods: ["GET"]
        roles: ["admin", "user", "monitor"]

  # 速率限制
  rate_limit:
    requests_per_second: 100
    burst_size: 200
    window_size: 60s

  # IP白名单
  ip_whitelist:
    allowed_ips:
      - "192.168.1.0/24"
      - "10.0.0.0/8"
      - "172.16.0.0/12"

  # 健康检查
  health_check:
    endpoint: 0.0.0.0:13133
    path: "/health"
    tls:
      cert_file: /etc/otel-collector/certs/health.crt
      key_file: /etc/otel-collector/certs/health.key

  # 性能分析
  pprof:
    endpoint: 0.0.0.0:1777
    tls:
      cert_file: /etc/otel-collector/certs/pprof.crt
      key_file: /etc/otel-collector/certs/pprof.key

service:
  extensions: [oauth2client, jwt, access_control, rate_limit, ip_whitelist, health_check, pprof]
  pipelines:
    traces:
      receivers: [otlp]
      processors: [attributes, transform, filter, encryption, audit, batch]
      exporters: [logging, otlp, secure_storage]
    metrics:
      receivers: [otlp]
      processors: [attributes, transform, filter, encryption, audit, batch]
      exporters: [logging, otlp, secure_storage]
    logs:
      receivers: [otlp]
      processors: [attributes, transform, filter, encryption, audit, batch]
      exporters: [logging, otlp, secure_storage]
  telemetry:
    logs:
      level: info
      development: false
      disable_caller: false
      disable_stacktrace: false
      sampling:
        initial: 5
        thereafter: 200
    metrics:
      level: detailed
      address: 0.0.0.0:8888
      readers:
        - periodic:
            interval: 10s
